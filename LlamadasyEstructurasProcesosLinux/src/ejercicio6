Primero crea un proceso hijo con fork. Este hijo ejecuta la función execl() que sustituye la imagen del proceso actual por una nueva imagen de proceso. EL proceso que ejecuta se encuentra en el primer argumento de "/usr/bin/ldd" ldd imprime las librerias necesarias por cada programa  o comparte librerias especificas en la linea de comandos.

El segundo argumento de execl por convencion es un puntero a el nombre del archivo asociado con el archivo que va a ser ejecutado. El tercer argumento es lo que le vamos a pasar a ldd y por ultimo esta función tiene que acabar en NULL.

El padre espera a que ejecute el hijo el proceso que ha llamado en el execl.


Para obtener el valor de exit del hijo, es decir, el porque ha acabado el proceso hijo del padre hacemos estado>>8 y mostramos tanto el pid de nuestro hijo como su estado de finalizacion.


Error en el execl: Bad address

Mi hijo 3354 ha finalizado con el estado 65280


En mi caso el programa falla porque no estaba añadido el argumento final de NULL, así que lo he añadido y el resultado ha sido:

	linux-vdso.so.1 =>  (0x00007fff38d64000)
	libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f43b798e000)
	/lib64/ld-linux-x86-64.so.2 (0x00007f43b7d6e000)

Mi hijo 3445 ha finalizado con el estado 0

Ahora si ha finalizado correctamente e imprime las librerias correctas.
